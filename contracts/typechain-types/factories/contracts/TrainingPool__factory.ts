/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TrainingPool,
  TrainingPoolInterface,
} from "../../contracts/TrainingPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_duckToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "modelHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
    ],
    name: "TrainingJobCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "updateHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "accuracyBps",
        type: "uint96",
      },
    ],
    name: "UpdateSubmitted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "modelHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "totalRewardPool",
        type: "uint256",
      },
    ],
    name: "createTrainingJob",
    outputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "submissionIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distributeReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "duckToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "jobs",
    outputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "modelHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextJobId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "submissions",
    outputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "updateHash",
        type: "bytes32",
      },
      {
        internalType: "uint96",
        name: "accuracyBps",
        type: "uint96",
      },
      {
        internalType: "bool",
        name: "rewarded",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "updateHash",
        type: "bytes32",
      },
      {
        internalType: "uint96",
        name: "accuracyBps",
        type: "uint96",
      },
    ],
    name: "submitUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "accuracyBps",
        type: "uint96",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620016da380380620016da8339818101604052810190620000379190620000f0565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000122565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000a48262000077565b9050919050565b6000620000b88262000097565b9050919050565b620000ca81620000ab565b8114620000d657600080fd5b50565b600081519050620000ea81620000bf565b92915050565b60006020828403121562000109576200010862000072565b5b60006200011984828501620000d9565b91505092915050565b60805161158e6200014c600039600081816102e20152818161056c015261096b015261158e6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b375bb641161005b578063b375bb6414610142578063b958089b14610160578063c2ff484b1461017c578063cf3d92b61461019857610088565b8063180aedf31461008d57806369c1fc25146100c1578063954802b3146100f4578063b0c2aa5e14610124575b600080fd5b6100a760048036038101906100a29190610bcb565b6101c8565b6040516100b8959493929190610c7c565b60405180910390f35b6100db60048036038101906100d69190610ccf565b61022b565b6040516100eb9493929190610d36565b60405180910390f35b61010e60048036038101906101099190610da7565b6102bd565b60405161011b9190610dd4565b60405180910390f35b61012c6102da565b6040516101399190610def565b60405180910390f35b61014a6102e0565b6040516101579190610e69565b60405180910390f35b61017a60048036038101906101759190610e84565b610304565b005b61019660048036038101906101919190610f03565b6106e5565b005b6101b260048036038101906101ad9190610f56565b610925565b6040516101bf9190610def565b60405180910390f35b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b6002602052816000526040600020818154811061024757600080fd5b9060005260206000209060030201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a90046bffffffffffffffffffffffff169080600201600c9054906101000a900460ff16905084565b6000611b58826bffffffffffffffffffffffff1610159050919050565b60005481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006001600085815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a490610ff3565b60405180910390fd5b8060040160009054906101000a900460ff166103fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f59061105f565b60405180910390fd5b60006002600086815260200190815260200160002084815481106104255761042461107f565b5b9060005260206000209060030201905080600201600c9054906101000a900460ff1615610487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047e906110fa565b60405180910390fd5b6104ac8160020160009054906101000a90046bffffffffffffffffffffffff166102bd565b6104eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e290611166565b60405180910390fd5b8160030154831115610532576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610529906111d2565b60405180910390fd5b828260030160008282546105469190611221565b92505081905550600181600201600c6101000a81548160ff0219169083151502179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b81526004016105e9929190611255565b6020604051808303816000875af1158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c91906112aa565b61066b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066290611323565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16857fab7542bafced3da2d8c881cb2dd1de859fac7c20d3650d2902ad389a64e08883856040516106d69190610def565b60405180910390a35050505050565b60006001600085815260200190815260200160002090508060040160009054906101000a900460ff1661074d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107449061105f565b60405180910390fd5b612710826bffffffffffffffffffffffff1611156107a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107979061138f565b60405180910390fd5b6002600085815260200190815260200160002060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001858152602001846bffffffffffffffffffffffff16815260200160001515815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550606082015181600201600c6101000a81548160ff02191690831515021790555050503373ffffffffffffffffffffffffffffffffffffffff16847fff64866d729461f1b05d29d7b5198d7c5174cb17d3151c28d990353682203ae685856040516109179291906113af565b60405180910390a350505050565b6000808211610969576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096090611424565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016109c693929190611444565b6020604051808303816000875af11580156109e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0991906112aa565b610a48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3f906114c7565b60405180910390fd5b6000808154610a56906114e7565b91905081905590506040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001838152602001600115158152506001600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16817f8c7d4197a9606b61c4ce23d75145e120c6ad8295fdfd80fc08d6ac1894e35b478585604051610b8292919061152f565b60405180910390a392915050565b600080fd5b6000819050919050565b610ba881610b95565b8114610bb357600080fd5b50565b600081359050610bc581610b9f565b92915050565b600060208284031215610be157610be0610b90565b5b6000610bef84828501610bb6565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c2382610bf8565b9050919050565b610c3381610c18565b82525050565b6000819050919050565b610c4c81610c39565b82525050565b610c5b81610b95565b82525050565b60008115159050919050565b610c7681610c61565b82525050565b600060a082019050610c916000830188610c2a565b610c9e6020830187610c43565b610cab6040830186610c52565b610cb86060830185610c52565b610cc56080830184610c6d565b9695505050505050565b60008060408385031215610ce657610ce5610b90565b5b6000610cf485828601610bb6565b9250506020610d0585828601610bb6565b9150509250929050565b60006bffffffffffffffffffffffff82169050919050565b610d3081610d0f565b82525050565b6000608082019050610d4b6000830187610c2a565b610d586020830186610c43565b610d656040830185610d27565b610d726060830184610c6d565b95945050505050565b610d8481610d0f565b8114610d8f57600080fd5b50565b600081359050610da181610d7b565b92915050565b600060208284031215610dbd57610dbc610b90565b5b6000610dcb84828501610d92565b91505092915050565b6000602082019050610de96000830184610c6d565b92915050565b6000602082019050610e046000830184610c52565b92915050565b6000819050919050565b6000610e2f610e2a610e2584610bf8565b610e0a565b610bf8565b9050919050565b6000610e4182610e14565b9050919050565b6000610e5382610e36565b9050919050565b610e6381610e48565b82525050565b6000602082019050610e7e6000830184610e5a565b92915050565b600080600060608486031215610e9d57610e9c610b90565b5b6000610eab86828701610bb6565b9350506020610ebc86828701610bb6565b9250506040610ecd86828701610bb6565b9150509250925092565b610ee081610c39565b8114610eeb57600080fd5b50565b600081359050610efd81610ed7565b92915050565b600080600060608486031215610f1c57610f1b610b90565b5b6000610f2a86828701610bb6565b9350506020610f3b86828701610eee565b9250506040610f4c86828701610d92565b9150509250925092565b60008060408385031215610f6d57610f6c610b90565b5b6000610f7b85828601610eee565b9250506020610f8c85828601610bb6565b9150509250929050565b600082825260208201905092915050565b7f6f6e6c7920726571756573746572000000000000000000000000000000000000600082015250565b6000610fdd600e83610f96565b9150610fe882610fa7565b602082019050919050565b6000602082019050818103600083015261100c81610fd0565b9050919050565b7f696e616374697665000000000000000000000000000000000000000000000000600082015250565b6000611049600883610f96565b915061105482611013565b602082019050919050565b600060208201905081810360008301526110788161103c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f616c726561647900000000000000000000000000000000000000000000000000600082015250565b60006110e4600783610f96565b91506110ef826110ae565b602082019050919050565b60006020820190508181036000830152611113816110d7565b9050919050565b7f6261642070726f6f660000000000000000000000000000000000000000000000600082015250565b6000611150600983610f96565b915061115b8261111a565b602082019050919050565b6000602082019050818103600083015261117f81611143565b9050919050565b7f6578636565647320706f6f6c0000000000000000000000000000000000000000600082015250565b60006111bc600c83610f96565b91506111c782611186565b602082019050919050565b600060208201905081810360008301526111eb816111af565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061122c82610b95565b915061123783610b95565b925082820390508181111561124f5761124e6111f2565b5b92915050565b600060408201905061126a6000830185610c2a565b6112776020830184610c52565b9392505050565b61128781610c61565b811461129257600080fd5b50565b6000815190506112a48161127e565b92915050565b6000602082840312156112c0576112bf610b90565b5b60006112ce84828501611295565b91505092915050565b7f7472616e73666572206661696c65640000000000000000000000000000000000600082015250565b600061130d600f83610f96565b9150611318826112d7565b602082019050919050565b6000602082019050818103600083015261133c81611300565b9050919050565b7f696e76616c696420616363000000000000000000000000000000000000000000600082015250565b6000611379600b83610f96565b915061138482611343565b602082019050919050565b600060208201905081810360008301526113a88161136c565b9050919050565b60006040820190506113c46000830185610c43565b6113d16020830184610d27565b9392505050565b7f7265776172643d30000000000000000000000000000000000000000000000000600082015250565b600061140e600883610f96565b9150611419826113d8565b602082019050919050565b6000602082019050818103600083015261143d81611401565b9050919050565b60006060820190506114596000830186610c2a565b6114666020830185610c2a565b6114736040830184610c52565b949350505050565b7f66756e64696e67206661696c6564000000000000000000000000000000000000600082015250565b60006114b1600e83610f96565b91506114bc8261147b565b602082019050919050565b600060208201905081810360008301526114e0816114a4565b9050919050565b60006114f282610b95565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611524576115236111f2565b5b600182019050919050565b60006040820190506115446000830185610c43565b6115516020830184610c52565b939250505056fea2646970667358221220d00231016046c05aa2877bed360aa2afbd84c8c2b571ffeec45d3a7755daf84a64736f6c63430008180033";

type TrainingPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TrainingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TrainingPool__factory extends ContractFactory {
  constructor(...args: TrainingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _duckToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_duckToken, overrides || {});
  }
  override deploy(
    _duckToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_duckToken, overrides || {}) as Promise<
      TrainingPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TrainingPool__factory {
    return super.connect(runner) as TrainingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrainingPoolInterface {
    return new Interface(_abi) as TrainingPoolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TrainingPool {
    return new Contract(address, _abi, runner) as unknown as TrainingPool;
  }
}
