/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ComputeMarketplace,
  ComputeMarketplaceInterface,
} from "../../contracts/ComputeMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_duckToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "machineId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "specs",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pricePerHourInDuck",
        type: "uint256",
      },
    ],
    name: "MachineListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "machineId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "hoursPaid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalPaidDuck",
        type: "uint256",
      },
    ],
    name: "MachineRented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "machineId",
        type: "uint256",
      },
    ],
    name: "MachineUnlisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "machineId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "modelId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "datasetId",
        type: "string",
      },
    ],
    name: "TrainingJobCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "duckToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "specs",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "pricePerHourInDuck",
        type: "uint256",
      },
    ],
    name: "listMachine",
    outputs: [
      {
        internalType: "uint256",
        name: "machineId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "machines",
    outputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "string",
        name: "specs",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "pricePerHourInDuck",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "listed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextJobId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextMachineId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "machineId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hoursPaid",
        type: "uint256",
      },
    ],
    name: "rentMachine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "machineId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hoursPaid",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "modelId",
        type: "string",
      },
      {
        internalType: "string",
        name: "datasetId",
        type: "string",
      },
    ],
    name: "rentMachineWithJob",
    outputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "machineId",
        type: "uint256",
      },
    ],
    name: "unlistMachine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001595380380620015958339818101604052810190620000379190620000f0565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000122565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000a48262000077565b9050919050565b6000620000b88262000097565b9050919050565b620000ca81620000ab565b8114620000d657600080fd5b50565b600081519050620000ea81620000bf565b92915050565b60006020828403121562000109576200010862000072565b5b60006200011984828501620000d9565b91505092915050565b6080516114496200014c60003960008181610231015281816107c4015261086401526114496000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638dd3a53d1161005b5780638dd3a53d1461012a578063b0c2aa5e1461015a578063b375bb6414610178578063d6eaaf291461019657610088565b80631aad66071461008d5780634d42845c146100bd57806353ffb4cd146100f0578063563841821461010c575b600080fd5b6100a760048036038101906100a29190610a61565b6101b2565b6040516100b49190610b17565b60405180910390f35b6100d760048036038101906100d29190610b32565b6103fc565b6040516100e79493929190610c4b565b60405180910390f35b61010a60048036038101906101059190610b32565b6104e1565b005b610114610629565b6040516101219190610b17565b60405180910390f35b610144600480360381019061013f9190610c97565b61062f565b6040516101519190610b17565b60405180910390f35b6101626107bc565b60405161016f9190610b17565b60405180910390f35b6101806107c2565b60405161018d9190610d56565b60405180910390f35b6101b060048036038101906101ab9190610d71565b6107e6565b005b6000806001600089815260200190815260200160002090508060030160009054906101000a900460ff1661021b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021290610dfd565b60405180910390fd5b600087826002015461022d9190610e4c565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd338460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b81526004016102b093929190610e8e565b6020604051808303816000875af11580156102cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f39190610ef1565b610332576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032990610f6a565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16897f568057167808673a60eaf3100a88604553272429ab129bcb2ef809bffb02a0688a8460405161037b929190610f8a565b60405180910390a360026000815461039290610fb3565b9190508190559250823373ffffffffffffffffffffffffffffffffffffffff168a7fe523a65266a4f3feddea2438c9bc78cd22d894ed5d7d67e9af8c7fa6f495e2898a8a8a8a6040516103e89493929190611037565b60405180910390a450509695505050505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610445906110a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610471906110a1565b80156104be5780601f10610493576101008083540402835291602001916104be565b820191906000526020600020905b8154815290600101906020018083116104a157829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b60006001600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461058a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105819061111e565b60405180910390fd5b8060030160009054906101000a900460ff166105db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d290610dfd565b60405180910390fd5b60008160030160006101000a81548160ff021916908315150217905550817f7631a04d1383c26e088a8b65401795fb826378f08e42ae4f102c7fbedb4bd1a160405160405180910390a25050565b60005481565b6000806000815461063f90610fb3565b919050819055905060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001838152602001600115158152506001600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081610734919061130f565b506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16817f75450c81fe81a29686512a6657226b6aac165a2e232e7fe4aec092587f5d7e0b8686866040516107ad939291906113e1565b60405180910390a39392505050565b60025481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006001600084815260200190815260200160002090508060030160009054906101000a900460ff1661084e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084590610dfd565b60405180910390fd5b60008282600201546108609190610e4c565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd338460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b81526004016108e393929190610e8e565b6020604051808303816000875af1158015610902573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109269190610ef1565b610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095c90610f6a565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16847f568057167808673a60eaf3100a88604553272429ab129bcb2ef809bffb02a06885846040516109ae929190610f8a565b60405180910390a350505050565b600080fd5b600080fd5b6000819050919050565b6109d9816109c6565b81146109e457600080fd5b50565b6000813590506109f6816109d0565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610a2157610a206109fc565b5b8235905067ffffffffffffffff811115610a3e57610a3d610a01565b5b602083019150836001820283011115610a5a57610a59610a06565b5b9250929050565b60008060008060008060808789031215610a7e57610a7d6109bc565b5b6000610a8c89828a016109e7565b9650506020610a9d89828a016109e7565b955050604087013567ffffffffffffffff811115610abe57610abd6109c1565b5b610aca89828a01610a0b565b9450945050606087013567ffffffffffffffff811115610aed57610aec6109c1565b5b610af989828a01610a0b565b92509250509295509295509295565b610b11816109c6565b82525050565b6000602082019050610b2c6000830184610b08565b92915050565b600060208284031215610b4857610b476109bc565b5b6000610b56848285016109e7565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8a82610b5f565b9050919050565b610b9a81610b7f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bda578082015181840152602081019050610bbf565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c0282610ba0565b610c0c8185610bab565b9350610c1c818560208601610bbc565b610c2581610be6565b840191505092915050565b60008115159050919050565b610c4581610c30565b82525050565b6000608082019050610c606000830187610b91565b8181036020830152610c728186610bf7565b9050610c816040830185610b08565b610c8e6060830184610c3c565b95945050505050565b600080600060408486031215610cb057610caf6109bc565b5b600084013567ffffffffffffffff811115610cce57610ccd6109c1565b5b610cda86828701610a0b565b93509350506020610ced868287016109e7565b9150509250925092565b6000819050919050565b6000610d1c610d17610d1284610b5f565b610cf7565b610b5f565b9050919050565b6000610d2e82610d01565b9050919050565b6000610d4082610d23565b9050919050565b610d5081610d35565b82525050565b6000602082019050610d6b6000830184610d47565b92915050565b60008060408385031215610d8857610d876109bc565b5b6000610d96858286016109e7565b9250506020610da7858286016109e7565b9150509250929050565b7f6e6f74206c697374656400000000000000000000000000000000000000000000600082015250565b6000610de7600a83610bab565b9150610df282610db1565b602082019050919050565b60006020820190508181036000830152610e1681610dda565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e57826109c6565b9150610e62836109c6565b9250828202610e70816109c6565b91508282048414831517610e8757610e86610e1d565b5b5092915050565b6000606082019050610ea36000830186610b91565b610eb06020830185610b91565b610ebd6040830184610b08565b949350505050565b610ece81610c30565b8114610ed957600080fd5b50565b600081519050610eeb81610ec5565b92915050565b600060208284031215610f0757610f066109bc565b5b6000610f1584828501610edc565b91505092915050565b7f4455434b207472616e73666572206661696c6564000000000000000000000000600082015250565b6000610f54601483610bab565b9150610f5f82610f1e565b602082019050919050565b60006020820190508181036000830152610f8381610f47565b9050919050565b6000604082019050610f9f6000830185610b08565b610fac6020830184610b08565b9392505050565b6000610fbe826109c6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ff057610fef610e1d565b5b600182019050919050565b82818337600083830152505050565b60006110168385610bab565b9350611023838584610ffb565b61102c83610be6565b840190509392505050565b6000604082019050818103600083015261105281868861100a565b9050818103602083015261106781848661100a565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110b957607f821691505b6020821081036110cc576110cb611072565b5b50919050565b7f6e6f742070726f76696465720000000000000000000000000000000000000000600082015250565b6000611108600c83610bab565b9150611113826110d2565b602082019050919050565b60006020820190508181036000830152611137816110fb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026111cf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611192565b6111d98683611192565b95508019841693508086168417925050509392505050565b600061120c611207611202846109c6565b610cf7565b6109c6565b9050919050565b6000819050919050565b611226836111f1565b61123a61123282611213565b84845461119f565b825550505050565b600090565b61124f611242565b61125a81848461121d565b505050565b5b8181101561127e57611273600082611247565b600181019050611260565b5050565b601f8211156112c3576112948161116d565b61129d84611182565b810160208510156112ac578190505b6112c06112b885611182565b83018261125f565b50505b505050565b600082821c905092915050565b60006112e6600019846008026112c8565b1980831691505092915050565b60006112ff83836112d5565b9150826002028217905092915050565b61131882610ba0565b67ffffffffffffffff8111156113315761133061113e565b5b61133b82546110a1565b611346828285611282565b600060209050601f8311600181146113795760008415611367578287015190505b61137185826112f3565b8655506113d9565b601f1984166113878661116d565b60005b828110156113af5784890151825560018201915060208501945060208101905061138a565b868310156113cc57848901516113c8601f8916826112d5565b8355505b6001600288020188555050505b505050505050565b600060408201905081810360008301526113fc81858761100a565b905061140b6020830184610b08565b94935050505056fea264697066735822122033c931661e638ee5bd87a5e275e4d1f66a277059164c9c2d58b3e80916cd491164736f6c63430008180033";

type ComputeMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ComputeMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ComputeMarketplace__factory extends ContractFactory {
  constructor(...args: ComputeMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _duckToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_duckToken, overrides || {});
  }
  override deploy(
    _duckToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_duckToken, overrides || {}) as Promise<
      ComputeMarketplace & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ComputeMarketplace__factory {
    return super.connect(runner) as ComputeMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComputeMarketplaceInterface {
    return new Interface(_abi) as ComputeMarketplaceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ComputeMarketplace {
    return new Contract(address, _abi, runner) as unknown as ComputeMarketplace;
  }
}
