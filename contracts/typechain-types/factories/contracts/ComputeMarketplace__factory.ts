/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ComputeMarketplace,
  ComputeMarketplaceInterface,
} from "../../contracts/ComputeMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_duckToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "machineId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "specs",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pricePerHourInDuck",
        type: "uint256",
      },
    ],
    name: "MachineListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "machineId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "hoursPaid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalPaidDuck",
        type: "uint256",
      },
    ],
    name: "MachineRented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "machineId",
        type: "uint256",
      },
    ],
    name: "MachineUnlisted",
    type: "event",
  },
  {
    inputs: [],
    name: "duckToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "specs",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "pricePerHourInDuck",
        type: "uint256",
      },
    ],
    name: "listMachine",
    outputs: [
      {
        internalType: "uint256",
        name: "machineId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "machines",
    outputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "string",
        name: "specs",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "pricePerHourInDuck",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "listed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextMachineId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "machineId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hoursPaid",
        type: "uint256",
      },
    ],
    name: "rentMachine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "machineId",
        type: "uint256",
      },
    ],
    name: "unlistMachine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620011e8380380620011e88339818101604052810190620000379190620000f0565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000122565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000a48262000077565b9050919050565b6000620000b88262000097565b9050919050565b620000ca81620000ab565b8114620000d657600080fd5b50565b600081519050620000ea81620000bf565b92915050565b60006020828403121562000109576200010862000072565b5b60006200011984828501620000d9565b91505092915050565b6080516110a3620001456000396000818161050001526105a001526110a36000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80634d42845c1461006757806353ffb4cd1461009a57806356384182146100b65780638dd3a53d146100d4578063b375bb6414610104578063d6eaaf2914610122575b600080fd5b610081600480360381019061007c9190610738565b61013e565b6040516100919493929190610860565b60405180910390f35b6100b460048036038101906100af9190610738565b610223565b005b6100be61036b565b6040516100cb91906108ac565b60405180910390f35b6100ee60048036038101906100e9919061092c565b610371565b6040516100fb91906108ac565b60405180910390f35b61010c6104fe565b60405161011991906109eb565b60405180910390f35b61013c60048036038101906101379190610a06565b610522565b005b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461018790610a75565b80601f01602080910402602001604051908101604052809291908181526020018280546101b390610a75565b80156102005780601f106101d557610100808354040283529160200191610200565b820191906000526020600020905b8154815290600101906020018083116101e357829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b60006001600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c390610af2565b60405180910390fd5b8060030160009054906101000a900460ff1661031d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031490610b5e565b60405180910390fd5b60008160030160006101000a81548160ff021916908315150217905550817f7631a04d1383c26e088a8b65401795fb826378f08e42ae4f102c7fbedb4bd1a160405160405180910390a25050565b60005481565b6000806000815461038190610bad565b919050819055905060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001838152602001600115158152506001600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816104769190610dc6565b506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16817f75450c81fe81a29686512a6657226b6aac165a2e232e7fe4aec092587f5d7e0b8686866040516104ef93929190610ed4565b60405180910390a39392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006001600084815260200190815260200160002090508060030160009054906101000a900460ff1661058a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058190610b5e565b60405180910390fd5b600082826002015461059c9190610f06565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd338460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b815260040161061f93929190610f48565b6020604051808303816000875af115801561063e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106629190610fab565b6106a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069890611024565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16847f568057167808673a60eaf3100a88604553272429ab129bcb2ef809bffb02a06885846040516106ea929190611044565b60405180910390a350505050565b600080fd5b600080fd5b6000819050919050565b61071581610702565b811461072057600080fd5b50565b6000813590506107328161070c565b92915050565b60006020828403121561074e5761074d6106f8565b5b600061075c84828501610723565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061079082610765565b9050919050565b6107a081610785565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107e05780820151818401526020810190506107c5565b60008484015250505050565b6000601f19601f8301169050919050565b6000610808826107a6565b61081281856107b1565b93506108228185602086016107c2565b61082b816107ec565b840191505092915050565b61083f81610702565b82525050565b60008115159050919050565b61085a81610845565b82525050565b60006080820190506108756000830187610797565b818103602083015261088781866107fd565b90506108966040830185610836565b6108a36060830184610851565b95945050505050565b60006020820190506108c16000830184610836565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126108ec576108eb6108c7565b5b8235905067ffffffffffffffff811115610909576109086108cc565b5b602083019150836001820283011115610925576109246108d1565b5b9250929050565b600080600060408486031215610945576109446106f8565b5b600084013567ffffffffffffffff811115610963576109626106fd565b5b61096f868287016108d6565b9350935050602061098286828701610723565b9150509250925092565b6000819050919050565b60006109b16109ac6109a784610765565b61098c565b610765565b9050919050565b60006109c382610996565b9050919050565b60006109d5826109b8565b9050919050565b6109e5816109ca565b82525050565b6000602082019050610a0060008301846109dc565b92915050565b60008060408385031215610a1d57610a1c6106f8565b5b6000610a2b85828601610723565b9250506020610a3c85828601610723565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a8d57607f821691505b602082108103610aa057610a9f610a46565b5b50919050565b7f6e6f742070726f76696465720000000000000000000000000000000000000000600082015250565b6000610adc600c836107b1565b9150610ae782610aa6565b602082019050919050565b60006020820190508181036000830152610b0b81610acf565b9050919050565b7f6e6f74206c697374656400000000000000000000000000000000000000000000600082015250565b6000610b48600a836107b1565b9150610b5382610b12565b602082019050919050565b60006020820190508181036000830152610b7781610b3b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bb882610702565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610bea57610be9610b7e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610c867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610c49565b610c908683610c49565b95508019841693508086168417925050509392505050565b6000610cc3610cbe610cb984610702565b61098c565b610702565b9050919050565b6000819050919050565b610cdd83610ca8565b610cf1610ce982610cca565b848454610c56565b825550505050565b600090565b610d06610cf9565b610d11818484610cd4565b505050565b5b81811015610d3557610d2a600082610cfe565b600181019050610d17565b5050565b601f821115610d7a57610d4b81610c24565b610d5484610c39565b81016020851015610d63578190505b610d77610d6f85610c39565b830182610d16565b50505b505050565b600082821c905092915050565b6000610d9d60001984600802610d7f565b1980831691505092915050565b6000610db68383610d8c565b9150826002028217905092915050565b610dcf826107a6565b67ffffffffffffffff811115610de857610de7610bf5565b5b610df28254610a75565b610dfd828285610d39565b600060209050601f831160018114610e305760008415610e1e578287015190505b610e288582610daa565b865550610e90565b601f198416610e3e86610c24565b60005b82811015610e6657848901518255600182019150602085019450602081019050610e41565b86831015610e835784890151610e7f601f891682610d8c565b8355505b6001600288020188555050505b505050505050565b82818337600083830152505050565b6000610eb383856107b1565b9350610ec0838584610e98565b610ec9836107ec565b840190509392505050565b60006040820190508181036000830152610eef818587610ea7565b9050610efe6020830184610836565b949350505050565b6000610f1182610702565b9150610f1c83610702565b9250828202610f2a81610702565b91508282048414831517610f4157610f40610b7e565b5b5092915050565b6000606082019050610f5d6000830186610797565b610f6a6020830185610797565b610f776040830184610836565b949350505050565b610f8881610845565b8114610f9357600080fd5b50565b600081519050610fa581610f7f565b92915050565b600060208284031215610fc157610fc06106f8565b5b6000610fcf84828501610f96565b91505092915050565b7f4455434b207472616e73666572206661696c6564000000000000000000000000600082015250565b600061100e6014836107b1565b915061101982610fd8565b602082019050919050565b6000602082019050818103600083015261103d81611001565b9050919050565b60006040820190506110596000830185610836565b6110666020830184610836565b939250505056fea2646970667358221220672c08741261ee586a03798bd072fc444a0837dea6d1b211a01bf6a9e0ae7d2064736f6c63430008180033";

type ComputeMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ComputeMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ComputeMarketplace__factory extends ContractFactory {
  constructor(...args: ComputeMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _duckToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_duckToken, overrides || {});
  }
  override deploy(
    _duckToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_duckToken, overrides || {}) as Promise<
      ComputeMarketplace & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ComputeMarketplace__factory {
    return super.connect(runner) as ComputeMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComputeMarketplaceInterface {
    return new Interface(_abi) as ComputeMarketplaceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ComputeMarketplace {
    return new Contract(address, _abi, runner) as unknown as ComputeMarketplace;
  }
}
